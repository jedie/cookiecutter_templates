[project]
name = "{{ cookiecutter.package_name }}"
version = "{{ cookiecutter.package_version }}"
description = "{{ cookiecutter.package_description }}"
readme = "README.md"
authors = [
    {name = '{{ cookiecutter.full_name }}', email = '{{ cookiecutter.author_email }}'}
]
requires-python = ">=3.9,<4"

[project.urls]
Documentation = "{{ cookiecutter.package_url }}"
Source = "{{ cookiecutter.package_url }}"

[project.scripts]
{{ cookiecutter.package_name }} = "{{ cookiecutter.package_name }}.__main__:main"

[tool.setuptools]
packages = ["{{ cookiecutter.package_name }}"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*']
known_first_party=['{{ cookiecutter.package_name }}']
line_length=100
lines_after_imports=2


[tool.flake8]
statistics = "True"
ignore = ["D203" , "W503"]
max-line-length = 119
exclude = '''
    .git,
'''


[tool.coverage.run]
branch = true
source = ['.']
omit = ['.*', '*/tests/*']
command_line = '-m unittest --locals --verbose'

[tool.coverage.report]
skip_empty = true
fail_under = 45


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests']
