[project]
name = "your_cool_package"
dynamic = ["version"]
description = "A minimal Python package"
authors = [
    {name = 'John Doh', email = 'john-doh@example.tld'}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
]
license = {text = "GPL-3.0-or-later"}
readme="README.md"


dependencies = []

[project.optional-dependencies]
dev = [
    'tox>=4.4.4',  # https://github.com/tox-dev/tox
    'coverage',  # https://github.com/nedbat/coveragepy
    'flake8',  # https://github.com/pycqa/flake8
    'flake8-bugbear',  # https://github.com/PyCQA/flake8-bugbear
    'manageprojects',  # https://github.com/john-doh/manageprojects
    'twine',  # https://github.com/pypa/twine/
    'beautifulsoup4',
    'lxml',
    'pdoc',  # https://pdoc.dev/
    'tblib',  # https://github.com/ionelmc/python-tblib
    'packaging',  # https://pypi.org/project/packaging/
    'build',  # https://github.com/pypa/build
    'EditorConfig',  # https://pypi.org/project/EditorConfig/

    # https://github.com/akaihola/darker
    # https://github.com/ikamensh/flynt
    # https://github.com/pycqa/isort
    # https://github.com/pygments/pygments
    'darker[flynt, isort, color]',

    'typeguard',  # https://github.com/agronholm/typeguard/
]

[project.urls]
Documentation = "https://github.com/john-doh/your_cool_package/"
Source = "https://github.com/john-doh/your_cool_package/"

[project.scripts]
your_cool_package = "your_cool_package.__main__:main"

[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=7.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["your_cool_package*"]

[tool.setuptools.dynamic]
version = {attr = "your_cool_package.__version__"}


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
profile = "black"


[tool.pytest.ini_options]
filterwarnings = []


[tool.coverage.run]
branch = true
parallel = true
source = ['.']
concurrency = ["multiprocessing"]
command_line = "-m unittest --locals --verbose"

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{312,311,310,39}
skip_missing_interpreters = True

[testenv]
passenv = *
allowlist_externals = make
deps =
    .[dev]
commands_pre =
    make install
commands =
    make test
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests']
