[project]
name = "your-cool-package"
dynamic = ["version"]
description = "A minimal Python package"
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'John Doh', email = 'john-doh@example.tld'}
]
requires-python = ">=3.11"
dependencies = [
    "django",  # https://docs.djangoproject.com

    "colorlog",  # https://github.com/borntyping/python-colorlog
    "gunicorn",  # https://github.com/benoimyproject.wsgitc/gunicorn

    "django-debug-toolbar",  # http://django-debug-toolbar.readthedocs.io/en/stable/changes.html
    "bx_py_utils",  # https://github.com/boxine/bx_py_utils
    "bx_django_utils",  # https://github.com/boxine/bx_django_utils
    "django-axes",  # https://github.com/jazzband/django-axes
]
[dependency-groups]
dev = [
    "django-debug-toolbar",  # http://django-debug-toolbar.readthedocs.io/en/stable/changes.html
    "manage_django_project",  # https://github.com/jedie/manage_django_project
    "uv",  # https://github.com/astral-sh/uv
    "hatchling",  # https://github.com/pypa/hatch/tree/master/backend
    "playwright",  # https://github.com/microsoft/playwright-python
    "tblib",   # https://github.com/ionelmc/python-tblib
    "nox",  # https://github.com/wntrblm/nox
    "coverage",  # https://github.com/nedbat/coveragepy
    "autopep8",  # https://github.com/hhatto/autopep8
    "pyupgrade",  # https://github.com/asottile/pyupgrade
    "flake8",  # https://github.com/pycqa/flake8
    "flake8-bugbear",  # https://github.com/PyCQA/flake8-bugbear
    "pyflakes",  # https://github.com/PyCQA/pyflakes
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "pip-audit",  # https://github.com/pypa/pip-audit
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine
    "pre-commit",  # https://github.com/pre-commit/pre-commit
    "typeguard",  # https://github.com/agronholm/typeguard/

    # https://github.com/akaihola/darker
    # https://github.com/ikamensh/flynt
    # https://github.com/pycqa/isort
    # https://github.com/pygments/pygments
    "darker[flynt, isort, color]",

    "model_bakery",  # https://github.com/model-bakers/model_bakery
    "requests-mock",
    "django-override-storage",  # https://github.com/danifus/django-override-storage
]

[project.urls]
Documentation = "https://github.com/john-doh/your_cool_package"
Source = "https://github.com/john-doh/your_cool_package"


[project.scripts]
# Must be set in ./manage.py and PROJECT_SHELL_SCRIPT:
your_cool_package_project = "your_cool_package_project.__main__:main"

[manage_django_project]
module_name="your_cool_package_project"

# Django settings used for all commands except test/coverage/tox:
local_settings='your_cool_package_project.settings.local'

# Django settings used for test/coverage/tox commands:
test_settings='your_cool_package_project.settings.tests'


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["your_cool_package", "your_cool_package_project"]

[tool.hatch.version]
path = "your_cool_package/__init__.py"


[tool.cli_base]
version_module_name = "your_cool_package" # Used by "update-readme-history" pre-commit hook


[tool.cli_base.pip_audit]
requirements=["requirements.dev.txt"]
strict=true
require_hashes=true
ignore-vuln=[
#    "CVE-2019-8341", # Jinja2: Side Template Injection (SSTI)
]





[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*','*/migrations/*']
known_first_party=['your_cool_package']
line_length=119
lines_after_imports=2


[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']
command_line = '-m huey_monitor_project test --shuffle --parallel --buffer'

[tool.coverage.report]
omit = ['.*', '*/tests/*', '*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']
