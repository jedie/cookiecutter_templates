[project]
name = "your_cool_package"
dynamic = ["version"]
description = "A minimal Python package"
license = {text = "GPL-3.0-or-later"}
readme = "README.md"
authors = [
    {name = 'John Doh', email = 'john-doh@example.tld'}
]
requires-python = ">=3.11"
dependencies = []
[dependency-groups]
dev = [
    "manageprojects",  # https://github.com/jedie/manageprojects
    "urllib3", # for bx_py_utils.test_utils.deny_requests.deny_any_real_request() in tests
    "uv",  # https://github.com/astral-sh/uv
    "nox",  # https://github.com/wntrblm/nox
    "coverage",  # https://github.com/nedbat/coveragepy
    "ruff", # https://github.com/astral-sh/ruff
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "pip-audit",  # https://github.com/pypa/pip-audit
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine
    "typeguard",  # https://github.com/agronholm/typeguard/
]

[project.urls]
Documentation = "https://github.com/john-doh/your_cool_package/"
Source = "https://github.com/john-doh/your_cool_package/"

[project.scripts]
your_cool_package = "your_cool_package.__main__:main"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["your_cool_package"]

[tool.hatch.version]
path = "your_cool_package/__init__.py"


[tool.ruff]
# https://docs.astral.sh/ruff/configuration/
line-length = 120
exclude = [
  ".*/",
]

[tool.ruff.lint]
preview = true  # Needed for some of the rules
extend-select = [
    "E", # pycodestyle: https://docs.astral.sh/ruff/rules/#error-e
    "I", # isort: https://docs.astral.sh/ruff/rules/#isort-i
]
ignore = [
    "E402", # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
    "E731", # https://docs.astral.sh/ruff/rules/lambda-assignment/
]

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#lintisort
lines-after-imports = 2

[tool.ruff.format]
quote-style = "single"


[tool.coverage.run]
branch = true
parallel = true
source = ['.']
concurrency = ["multiprocessing"]
command_line = "-m unittest --locals --verbose"

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests']
