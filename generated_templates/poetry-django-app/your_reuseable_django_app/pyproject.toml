[tool.poetry]
name = 'your_reuseable_django_app'
version = "0.0.1"
description = 'A minimal Python package using Poetry'
homepage = "https://github.com/john-doh/your_reuseable_django_app"
authors = [
    "John Doh <john-doh@example.tld>",
]
maintainers = [
    "John Doh <john-doh@example.tld>",
]
license = 'GPL-3.0-or-later'
readme='README.md'
include = ['LICENSE', 'README.md']
packages = [{ include = "your_reuseable_django_app" }, { include = "your_reuseable_django_app_tests" }]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Topic :: Software Development :: Libraries :: Python Modules',
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    'Framework :: Django',
    'Intended Audience :: Developers',
]
keywords=['django', 'utilities']

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/john-doh/your_reuseable_django_app/issues"

[tool.poetry.dependencies]
python = '>=3.9,<4.0.0'
django = '>=4.0,<4.2'

[tool.poetry.dev-dependencies]
bx_py_utils = '*'  # https://github.com/boxine/bx_py_utils
bx_django_utils = '*'  # https://github.com/boxine/bx_django_utils
tox = '>=4.4.4'  # https://github.com/tox-dev/tox
coverage= "*"  # https://github.com/nedbat/coveragepy
EditorConfig = '*'  # https://github.com/editorconfig/editorconfig-core-py
safety = '*'  # https://github.com/pyupio/safety
mypy = '*'  # https://github.com/python/mypy
twine = '*'  # https://github.com/pypa/twine
manageprojects = '*'  # https://github.com/jedie/manageprojects
django-debug-toolbar = '*'
beautifulsoup4 = '*'
lxml = '*'
playwright = '*'  # https://playwright.dev/python/
model-bakery = '*'  # https://github.com/model-bakers/model_bakery
tblib = '*'  # https://github.com/ionelmc/python-tblib

# https://github.com/akaihola/darker
# https://github.com/ikamensh/flynt
# https://github.com/pycqa/isort
# https://github.com/pygments/pygments
darker = { version = "*", extras = ["flynt", "isort", "color"] }

tomli = "*"  # https://github.com/hukkin/tomli
# tomli only needed for Python <3.11, but see bug:
# https://github.com/pypa/pip/issues/9644#issuecomment-1456583402
#tomli = {version = "*", markers = "python_version < \"3.11\""}  # https://github.com/hukkin/tomli


[tool.poetry.scripts]
publish = "your_reuseable_django_app_tests.test_project.publish:publish"


[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'


[tool.darker]
src = ['.']
revision = "origin/main..."
line_length = 119
verbose = true
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
flynt = true
lint = [
    'flake8',
]
log_level = 'INFO'


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
atomic=true
profile='black'
skip_glob=['.*', '*/htmlcov/*','*/migrations/*']
known_first_party=['your_reuseable_django_app']
line_length=119
lines_after_imports=2


[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
source_pkgs=['your_reuseable_django_app']
command_line = 'manage.py test --parallel --shuffle'

[tool.coverage.report]
omit = ['.*', '*/tests/*','*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{312,311,310}-django{42,41}
skip_missing_interpreters = True

[testenv]
passenv = *
deps =
    django41: django>=4.1,<4.2
    django42: django>=4.2,<4.3
    manageprojects
    bx_django_utils
    model-bakery
    playwright
    beautifulsoup4
    lxml
    django-debug-toolbar
    tblib
    coverage[toml]
commands =
    {envpython} -m coverage run --context='{envname}'
    {envpython} -m coverage combine --append
    {envpython} -m coverage xml
    {envpython} -m coverage report
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']
