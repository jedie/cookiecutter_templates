[tool.poetry]
name = "{{ cookiecutter.ynh_app_pkg_name }}"
version = "{{ cookiecutter.upstream_version }}+{{ cookiecutter.ynh_suffix_version }}"
description = "{{ cookiecutter.package_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.author_email }}>"]
homepage = "{{ cookiecutter.ynh_app_url }}"
license = "{{ cookiecutter.license }}"
readme = 'README.md'

[tool.poetry.urls]
"Bug Tracker" = "{{ cookiecutter.bug_tracker_url }}"

[tool.poetry.dependencies]
python = ">=3.9,<4.0.0"  # Stay with 3.9 until YunoHost used >=Debian 11 (Bullseye)
#
{{ cookiecutter.upstream_pkg_name }} = ">={{ cookiecutter.upstream_version }}"  # {{ cookiecutter.upstream_url }}
#
# extras "ynh" will install: gunicorn, psycopg2, django-redis and django-axes
# see: https://github.com/YunoHost-Apps/django_yunohost_integration/blob/main/pyproject.toml
django_yunohost_integration = {version = ">=0.5.1", extras = ["ynh"]}  # https://github.com/YunoHost-Apps/django_yunohost_integration


[tool.poetry.dev-dependencies]
bx_py_utils = "*"  # https://github.com/boxine/bx_py_utils
bx_django_utils = "*"  # https://github.com/boxine/bx_django_utils
tox = ">=4.4.4"  # https://github.com/tox-dev/tox
coverage= "*"  # https://github.com/nedbat/coveragepy
flake8 = "*"  # https://github.com/pycqa/flake8
EditorConfig = "*"  # https://github.com/editorconfig/editorconfig-core-py
safety = "*"  # https://github.com/pyupio/safety
mypy = "*"  # https://github.com/python/mypy
twine = "*"  # https://github.com/pypa/twine
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
requests = "*"  # https://github.com/psf/requests
packaging = "*"  # https://github.com/pypa/packagi
beautifulsoup4 = "*"  # https://pypi.org/project/beautifulsoup4/

# https://github.com/akaihola/darker
# https://github.com/ikamensh/flynt
# https://github.com/pycqa/isort
# https://github.com/pygments/pygments
darker = { version = "*", extras = ["flynt", "isort", "color"] }

tomli = "*"  # https://github.com/hukkin/tomli
# tomli only needed for Python <3.11, but see bug:
# https://github.com/pypa/pip/issues/9644#issuecomment-1456583402
#tomli = {version = "*", markers = "python_version < \"3.11\""}  # https://github.com/hukkin/tomli

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.darker]
src = ['.']
revision = "origin/master..."
line_length = 119
verbose = true
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
flynt = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
skip_glob=[".*", "*/htmlcov/*","*/migrations/*","*/local_test/*"]
known_first_party=['{{ cookiecutter.upstream_pkg_app_name }}']
line_length=119
lines_after_imports=2


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* .git __pycache__ conf local_test coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --reuse-db
    --nomigrations
    --cov=.
    --cov-config=pyproject.toml
    --cov-report term-missing
    --cov-report html
    --cov-report xml
    --no-cov-on-fail
    --showlocals
    --doctest-modules
    --failed-first
    --new-first
"""


[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
source = ['.']

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{311,310,39}
skip_missing_interpreters = True

[testenv]
passenv = *
skip_install = true
allowlist_externals = make
commands =
    make pytest
"""
