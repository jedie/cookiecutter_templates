#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/tests.v1.schema.json

test_format = 1.0

[default]

    # ------------
    # Tests to run
    # ------------

    # NB: the tests to run are automatically deduced by the CI script according to the
    # content of the app's manifest. The declarations below allow to customize which
    # tests are ran, possibly add special test suite to test special args, or
    # declare which commits to test upgrade from.
    #
    # You can also decide (though this is discouraged!) to ban/ignore some tests,

    # The test IDs to be used in only/exclude statements are:
    # install.root, install.subdir, install.nourl, install.multi, backup_restore, upgrade, upgrade.someCommitId change_url
    #exclude = ["install.private", "install.multi"]

    # -------------------------------
    # Default args to use for install
    # -------------------------------

    # By default, the CI will automagically fill the 'standard' args
    # such as domain, path, admin, is_public and password with relevant values
    # and also install args with a "default" provided in the manifest..
    # It should only make sense to declare custom args here for args with no default values

    args.default_from_email = "default_from_email@example.tld"
    args.admin_email = "admin_email@example.tld"

    # -------------------------------
    # Curl tests to validate that the app works
    # -------------------------------
    [default.curl_tests]

    # The root page is accessible by anonymous user:
    root_page1.path = "/"
    root_page1.logged_on_sso = false
    root_page1.expect_title  = "Example Project / Debug View"
    root_page1.expect_content = "Log in to see more information" # <<< only visible when not logged in
    root_page1.auto_test_assets = true

    # Same info page accessed by logged in user:
    root_page2.path = "/"
    root_page2.logged_on_sso = true
    root_page2.expect_title  = "Example Project / Debug View"
    root_page2.expect_content = "OS Environment" # <<< only visible when logged in
    root_page2.auto_test_assets = true

    # There is a special view that requires login:
    login_required3.path = "/login-required/"
    login_required3.logged_on_sso = true
    login_required3.expect_title  = "Site administration | Django site admin"
    login_required3.expect_content  = 'You pass the "LoginRequired" check, ok.'
    login_required3.auto_test_assets = true
